<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Description</key>
	<string>Downloads the latest version of Soulver.app.</string>
	<key>Identifier</key>
	<string>com.github.jps3.download.Soulver</string>
	<key>Input</key>
	<dict>
		<key>NAME</key>
		<string>Soulver</string>
		<!-- 
			2016-02-05T11:27:53-0500

			This is a note regarding security issues with Sparkle updates over http, as reported at:
      		https://vulnsec.com/2016/osx-apps-vulnerabilities/

      		When attempting to use 'https' in %appcast_url%, an Invalid Certificate Chain
      		error is returned.

      		Will have to revisit and test for https at a later date.
		-->
		<key>appcast_url</key>
		<string>https://www.acqualia.com/soulver/appcast/soulver2.xml</string>
	</dict>
	<key>MinimumVersion</key>
	<string>0.4.1</string>
	<key>Process</key>
	<array>
		<dict>
			<key>Processor</key>
			<string>SparkleUpdateInfoProvider</string>
		</dict>
		<dict>
			<key>Processor</key>
			<string>URLDownloader</string>
		</dict>
		<dict>
			<key>Processor</key>
			<string>EndOfCheckPhase</string>
		</dict>
		<dict>
			<key>Processor</key>
			<string>Unarchiver</string>
			<key>Arguments</key>
			<dict>
				<key>destination_path</key>
				<string>%RECIPE_CACHE_DIR%/%NAME%</string>
				<key>purge_destination</key>
				<true/>
			</dict>
		</dict>
		<dict>
			<key>Processor</key>
			<string>CodeSignatureVerifier</string>
			<key>Arguments</key>
			<dict>
				<key>input_path</key>
				<string>%RECIPE_CACHE_DIR%/%NAME%/Soulver.app</string>
				<key>requirement</key>
				<string>anchor apple generic and identifier "com.acqualia.soulver" and (certificate leaf[field.1.2.840.113635.100.6.1.9] /* exists */ or certificate 1[field.1.2.840.113635.100.6.2.6] /* exists */ and certificate leaf[field.1.2.840.113635.100.6.1.13] /* exists */ and certificate leaf[subject.OU] = "8HSTZV64A5")</string>
			</dict>
		</dict>
	</array>
</dict>
</plist>
